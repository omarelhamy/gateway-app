{
  "name": "gateway-manager-backend",
  "version": "1.0.0",
  "description": "A robust NestJS backend application for managing IoT gateways and peripheral devices",
  "author": "Gateway Manager Team",
  "private": true,
  "license": "MIT",
  "scripts": {
    "build": "nest build",
    "build:prod": "nest build --webpack --webpackPath webpack-prod.config.js",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "lint:check": "eslint \"{src,apps,libs,test}/**/*.ts\"",
    "test": "jest",
    "test:watch": "jest --watch",
    "db:create": "createdb gateway_db",
    "db:drop": "dropdb gateway_db",
    "db:reset": "npm run db:drop && npm run db:create",
    "db:migrate": "psql -d gateway_db -f migrations/001_initial_schema.sql && psql -d gateway_db -f migrations/002_test_data.sql",
    "db:seed": "psql -d gateway_db -f migrations/002_test_data.sql",
    "db:status": "psql -d gateway_db -c \"\\dt\"",
    "docker:build": "docker build -t gateway-backend .",
    "docker:build:dev": "docker build -f Dockerfile.dev -t gateway-backend:dev .",
    "docker:run": "docker run -p 3000:3000 gateway-backend",
    "docker:run:dev": "docker run -p 3000:3000 -p 9229:9229 gateway-backend:dev",
    "docker:compose:up": "docker-compose up -d",
    "docker:compose:down": "docker-compose down",
    "docker:compose:logs": "docker-compose logs -f",
    "docker:compose:dev:up": "docker-compose -f docker-compose.dev.yml up -d",
    "docker:compose:dev:down": "docker-compose -f docker-compose.dev.yml down",
    "docker:compose:dev:logs": "docker-compose -f docker-compose.dev.yml logs -f",
    "clean": "rm -rf dist coverage .nyc_output",
    "clean:all": "npm run clean && rm -rf node_modules package-lock.json",
    "reinstall": "npm run clean:all && npm install",
    "health:check": "curl -f http://localhost:3000/health || exit 1",
    "health:db": "curl -f http://localhost:3000/health/db || exit 1",
    "dev:setup": "npm install && npm run db:create && npm run db:migrate",
    "dev:start": "npm run start:dev",
    "prod:setup": "npm install --production && npm run build",
    "prod:start": "npm run start:prod"
  },
  "dependencies": {
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^10.0.0",
    "@nestjs/mapped-types": "^2.1.0",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/typeorm": "^11.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "pg": "^8.16.3",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.26"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "dotenv": "^17.2.2",
    "eslint": "^8.0.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "sqlite3": "^5.1.7",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/gateway-manager-backend.git"
  },
  "keywords": [
    "nestjs",
    "iot",
    "gateway",
    "typescript",
    "postgresql",
    "docker"
  ]
}
